}
contador = contador + 1
}
contador
x
set.seed(1)
z <- 5
x <- z
contador <- 0
while(z>=3 && z<=10){
x = x;c(z)
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
contador = contador + 1
}
contador
x
set.seed(1)
z <- 5
x <- z
contador <- 0
while(z>=3 && z<=10){
x = x;list(z)
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
contador = contador + 1
}
contador
x
x <- vector(1:2, z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
contador = contador + 1
}
contador
x
set.seed(1)
z <- 5
x <- vector(1:4, z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
contador = contador + 1
}
contador
x
set.seed(1)
z <- 5
x <- vector(1:20, z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
x = x;z
contador = contador + 1
}
contador
x
set.seed(1)
z <- 5
x <- vector(1:20, z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
x <- vector(1:2,z)
contador = contador + 1
}
contador
x
x <- vector(1:2,lis(z))
x <- vector(1:2,list(z))
set.seed(1)
z <- 5
x <- vector(1:20, z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
x <- vector(1:32,list(z))
contador = contador + 1
}
contador
x
suma2 <- function(x,y){
x+y
}
suma2(1,3) #4
mayor10 <- function(x){
seleccionados <- x>10
x[seleccionados]
}
mayor10(1:20)
mayor <- function(x,n=10){
seleccionados <- x > n
x[seleccionados]
}
mayor(1:20)
mayor(1:20,15)
mayor(n = 15, x =1:15)
mayor(n=15, x = 1:20)
promedioCol <- function(x,quitarNA = TRUE){
nc <- ncol(x)
medias <- vector("numeric", nc)
for(i in 1:nc){
medias[i] < mean(x[,i],na.rm = quitarNA)
}
}
x <- matrix(1:100,20,5)
promedioCol(x)
promedioCol <- function(x,quitarNA = TRUE){
nc <- ncol(x)
medias <- vector("numeric", nc)
for(i in 1:nc){
medias[i] < mean(x[,i],na.rm = quitarNA)
}
medias
}
x <- matrix(1:100,20,5)
promedioCol(x)
promedioCol <- function(x,quitarNA = TRUE){
nc <- ncol(x)
medias <- vector("numeric", nc)
for(i in 1:nc){
medias[i] <- mean(x[,i],na.rm = quitarNA)
}
medias
}
x <- matrix(1:100,20,5)
promedioCol(x)
f <- function(a,b){
a^2
}
f(2)
g <- function(a,b){
print(a)
print(b)
}
f(3)
g(3)
Â¿plot
?plot
myplot <- function(x,y,type="l",...){
plot(x,y,type = type, ...)
}
myplot <- function(x,y,type="l"){
plot(x,y,type = type)
}
myplot(1:10,10:1)
plot(1:10,10:1)
myplot(1:10,10:1,main="Mi Grafica")
myplot <- function(x,y,type="l",...){
plot(x,y,type = type, ...)
}
myplot <- function(x,y,type="l",...){
plot(x,y,type = type, ...)
}
myplot(1:10,10:1,main="Mi Grafica")
myplot(1:10,10:1,main="Mi Grafica",perro="123")
paste("ELLA","NO","TE","AMA", sep = "."")
paste("ELLA","NO","TE","AMA", sep = ".")
paste("ELLA","NO","TE","AMA", sep = ".")
mypaste <- function(sep = ".", ...){
paste(..., sep = sep)
}
mypaste("ELLA","NO","TE","AMA")
mypaste("ELLA","NO","TE","AMA")
("ELLA","NO","TE","AMA")
mypaste(".", "ella","no","te","ama")
install.packages("swirl")
library(swirl)
swirl()
swirl()
swirl()
#Scoing rules
lm
lm <- function(x){x*x}
lm
rm (lm)
lm
library(swirl)
serch()
search()
hacer.potencia <- function(n){
potencia <- function(x){
x^n
}
potencia
}
g(x) <- function(x){
x*y
}
y <- 10
f <- function(x){
y <- 2
y^2 + g(x)
}
g <- function(x){
x*y
}
f(3)
swirl:
swirle
swirl
swirl
swirl
swirl
swirl
swirl
swirl()
install.packages("swirl")
install.packages("swirl")
swirl
swirl()
library(swirl)
ls()
rm(list=ls())
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4)
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files.
?list.files
args(list.files())
args(list.files)
old.dir <- list.files()
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
'folder1'
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2"))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd()
setwd(old.dir)
1:20
pi:10
15:1
?:
:
`:`
?`:`
seq(1,20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
my_seq(length(30))
length(30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2),times = 10)
rep(c(0,1, 2), each = 10)
esc
noise <- function(n,mean,sd){
rnorm(n,mean,sd)
}
noise(5,1,2)
noise(1:5,1:5,2)
mapply(noise,1:5,1:5,2)
?str
?str(tapply)
str(tapply)
x <- c(rnorm(10),runif(10),rnorm(10,1))
f <- gl(3,10)
f
tapply(x,f,mean)
tapply(x,f,mean,simplify = F)
str(split)
split(x,f)
lapply(split(x,f),mean)
library(datasets)
head(rquality)
head(airquality)
split(airquality,$month)
split(airquality,$$month)
split(airquality$month)
split(airquality,airquality$month)
split(airquality,airquality$Month)
sapply(split(airquality,airquality$Month),colMeans, narows = TRUE)
sapply(split(airquality,airquality$Month),colMeans)
sapply(split(airquality,airquality$Month),colMeans, na.rw = TRUE)
sapply(split(airquality,airquality$Month),colMeans, na row = FALSE)
sapply(split(airquality,airquality$Month),colMeans, na.rm = FALSE)
sapply(split(airquality,airquality$Month),colMeans, na.rw = FALSE)
sapply(split(airquality,airquality$Month),colMeans, na.rs = FALSE)
sapply(split(airquality,airquality$Month),colMeans, na.ro = FALSE)
sapply(split(airquality,airquality$Month),colMeans, na.rm = FALSE)
sapply(split(airquality,airquality$Month),colMeans, na.rm = TRUE)
x <- rnorm(10)
f1 <- gl(2,5)
f2 <- gl(5,2)
f1
f2
interaction(f1,f2)
x
str(split(x,list(f1,f2)))
mtcars
split(mtcars,mtcars$cyl,mean)
split(mtcars,mtcars$cyl,mean(mtcars$hp))
lapply(split(mtcars,mtcars$cyl),mean(mtcars$hp)
lapply(split(mtcars,mtcars$cyl),mean(mtcars$hp)
lapply(mean(mtcars$hp)
tapply(split(mtcars,mtcars$cyl),mean(mtcars$hp)
tapply(split(mtcars,mtcars$cyl),mean(mtcars$hp))
split(mtcars,mtcars$cyl)
sapply(split(mtcars$hp,mtcars$cyl),mean)
sapply(split(mtcars$cyl,mtcars$hp),mean)
sapply(split(mtcars$hp,mtcars$cyl),mean)
#
imprimeMSJ <- function(x){
if(x>0)
print("x es mayor que 0")
else
print("x es menor a 0")
invisible(x)
}
imprimeMSJ(1)
imprimeMSJ(NA)
#
imprimeMSJ <- function(x){
if(x>0)
print("x es mayor que 0")
ifelse(x<0){
print("x es menor que 0")
else
print("x es un valor faltante")
invisible(x)
}
}
#
imprimeMSJ <- function(x){
if(x>0)
print("x es mayor que 0")
else(x<0){
print("x es menor que 0")
else
print("x es un valor faltante")
invisible(x)
}
}
#
imprimeMSJ <- function(x){
if(x>0)
print("x es mayor que 0")
elseif(x<0){
print("x es menor que 0")
else
print("x es un valor faltante")
invisible(x)
}
}
#
imprimeMSJ <- function(x){
if(x>0)
print("x es mayor que 0")
elseif(x<0)
print("x es menor que 0")
else
print("x es un valor faltante")
invisible(x)
}
#
imprimeMSJ <- function(x){
if(x = NA)
print("x es un valor faltante")
else
if(x<0)
print("x es menor que 0")
else
print("x es mayor que cero")
invisible(x)
}
#
imprimeMSJ <- function(x){
if(x = NA)
print("x es un valor faltante")
else
if(x<0)
print("x es menor que 0")
else
print("x es mayor que cero")
invisible(x)
}
imprimeMSJ(NA)
?if
?function(if)
?funciton
??if
??function
#
imprimeMSJ <- function(x){
if(es.na(x))
print("x es un valor faltante")
else if(x<0)
print("x es menor que 0")
else
print("x es mayor que cero")
invisible(x)
}
imprimeMSJ(9)
imprimeMSJ(0)
imprimeMSJ(0)
#
imprimeMSJ <- function(x){
if(is.na(x))
print("x es un valor faltante")
else if(x<0)
print("x es menor que 0")
else
print("x es mayor que cero")
invisible(x)
}
imprimeMSJ(0)
#traceback
mean(x)
#traceback
mean(x)
traceback()
lm(y - x)
traceback()
debug(lm)
lm(y~x)
##str
str(str)
str(lm)
str(ls)
x <- rnorm(100)
str(x)
summary(x)
f <-gl(40,10)
str(f)
summary(f)
str(airquality)
m <- matrix(rnorm(100),10,10)
str(m)
summary(airquality)
m <- matrix(rnorm(100),10,10)
str(m)
s <- split(airquality,airquality$Month)
str(s)
