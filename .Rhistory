if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
vec = vec + z
z <- z - 1
}
contador = contador + 1
}
contador
vec
vec <- 0
set.seed(1)
z <- 5
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
vec = vec;z
z <- z - 1
}
contador = contador + 1
}
contador
vec
?vector
as.vector(z)
set.seed(1)
z <- 5
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
contador = contador + 1
}
contador
as.vector(z)
?list
set.seed(1)
z <- 5
v <- list(z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
v = c(v); z
z <- z+1
} else {
z <- z - 1
}
contador = contador + 1
}
contador
v
set.seed(1)
z <- 5
v <- list(z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
v = c(v); z
contador = contador + 1
}
contador
v
set.seed(1)
z <- 5
v <- list(z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
v = c(v) + c(z)
contador = contador + 1
}
contador
v
set.seed(1)
z <- 5
v <- list(z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
v = v;z
contador = contador + 1
}
contador
v
set.seed(1)
z <- 5
v <- vector(z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
contador = contador + 1
}
contador
v
set.seed(1)
z <- 5
v <- vector(z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
v = v + z
contador = contador + 1
}
contador
v
set.seed(1)
z <- 5
x <-list(z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
x = x; list(z)
contador = contador + 1
}
contador
x
set.seed(1)
z <- 5
x <-list(z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
x <- list(z)
contador = contador + 1
}
contador
x
set.seed(1)
z <- 5
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
x <- c(z)
contador = contador + 1
}
contador
x
contador <- 0
while(z>=3 && z<=10){
x <- list(x); list(z)
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
contador = contador + 1
}
contador
x
set.seed(1)
z <- 5
x <- z
contador <- 0
while(z>=3 && z<=10){
x <- x; list(z)
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
contador = contador + 1
}
contador
x
set.seed(1)
z <- 5
x <- z
contador <- 0
while(z>=3 && z<=10){
x <- x+list(z)
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
contador = contador + 1
}
contador
x
et.seed(1)
z <- 5
x <- z
contador <- 0
while(z>=3 && z<=10){
x = x+list(z)
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
contador = contador + 1
}
contador
x
set.seed(1)
z <- 5
x <- z
contador <- 0
while(z>=3 && z<=10){
x = x;z
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
contador = contador + 1
}
contador
x
set.seed(1)
z <- 5
x <- z
contador <- 0
while(z>=3 && z<=10){
x = x;c(z)
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
contador = contador + 1
}
contador
x
set.seed(1)
z <- 5
x <- z
contador <- 0
while(z>=3 && z<=10){
x = x;list(z)
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
contador = contador + 1
}
contador
x
x <- vector(1:2, z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
contador = contador + 1
}
contador
x
set.seed(1)
z <- 5
x <- vector(1:4, z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
contador = contador + 1
}
contador
x
set.seed(1)
z <- 5
x <- vector(1:20, z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
x = x;z
contador = contador + 1
}
contador
x
set.seed(1)
z <- 5
x <- vector(1:20, z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
x <- vector(1:2,z)
contador = contador + 1
}
contador
x
x <- vector(1:2,lis(z))
x <- vector(1:2,list(z))
set.seed(1)
z <- 5
x <- vector(1:20, z)
contador <- 0
while(z>=3 && z<=10){
print(z)
moneda <- rbinom(1,1,0.5)
if (moneda==1){ #Caminata aleatoria
z <- z+1
} else {
z <- z - 1
}
x <- vector(1:32,list(z))
contador = contador + 1
}
contador
x
suma2 <- function(x,y){
x+y
}
suma2(1,3) #4
mayor10 <- function(x){
seleccionados <- x>10
x[seleccionados]
}
mayor10(1:20)
mayor <- function(x,n=10){
seleccionados <- x > n
x[seleccionados]
}
mayor(1:20)
mayor(1:20,15)
mayor(n = 15, x =1:15)
mayor(n=15, x = 1:20)
promedioCol <- function(x,quitarNA = TRUE){
nc <- ncol(x)
medias <- vector("numeric", nc)
for(i in 1:nc){
medias[i] < mean(x[,i],na.rm = quitarNA)
}
}
x <- matrix(1:100,20,5)
promedioCol(x)
promedioCol <- function(x,quitarNA = TRUE){
nc <- ncol(x)
medias <- vector("numeric", nc)
for(i in 1:nc){
medias[i] < mean(x[,i],na.rm = quitarNA)
}
medias
}
x <- matrix(1:100,20,5)
promedioCol(x)
promedioCol <- function(x,quitarNA = TRUE){
nc <- ncol(x)
medias <- vector("numeric", nc)
for(i in 1:nc){
medias[i] <- mean(x[,i],na.rm = quitarNA)
}
medias
}
x <- matrix(1:100,20,5)
promedioCol(x)
f <- function(a,b){
a^2
}
f(2)
g <- function(a,b){
print(a)
print(b)
}
f(3)
g(3)
Â¿plot
?plot
myplot <- function(x,y,type="l",...){
plot(x,y,type = type, ...)
}
myplot <- function(x,y,type="l"){
plot(x,y,type = type)
}
myplot(1:10,10:1)
plot(1:10,10:1)
myplot(1:10,10:1,main="Mi Grafica")
myplot <- function(x,y,type="l",...){
plot(x,y,type = type, ...)
}
myplot <- function(x,y,type="l",...){
plot(x,y,type = type, ...)
}
myplot(1:10,10:1,main="Mi Grafica")
myplot(1:10,10:1,main="Mi Grafica",perro="123")
paste("ELLA","NO","TE","AMA", sep = "."")
paste("ELLA","NO","TE","AMA", sep = ".")
paste("ELLA","NO","TE","AMA", sep = ".")
mypaste <- function(sep = ".", ...){
paste(..., sep = sep)
}
mypaste("ELLA","NO","TE","AMA")
mypaste("ELLA","NO","TE","AMA")
("ELLA","NO","TE","AMA")
mypaste(".", "ella","no","te","ama")
install.packages("swirl")
library(swirl)
swirl()
swirl()
swirl()
#Scoing rules
lm
lm <- function(x){x*x}
lm
rm (lm)
lm
library(swirl)
serch()
search()
hacer.potencia <- function(n){
potencia <- function(x){
x^n
}
potencia
}
g(x) <- function(x){
x*y
}
y <- 10
f <- function(x){
y <- 2
y^2 + g(x)
}
g <- function(x){
x*y
}
f(3)
